name: Deploy Next.js Practical Cases

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ghcr.io/${{ github.actor }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: ðŸ“¥ Install dependencies
        uses: ./.github/actions/setup

      - name: Run check tasks with Turbo
        run: |
          # To fix the file or directory not find error emmittied by prisma
          pnpm turbo prisma-generate --concurrency 1
          pnpm turbo typecheck
          pnpm turbo lint test build

  publish:
    needs: check
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Publish with lerna
        run: |
          pnpm turbo prisma-generate --concurrency 1
          pnpm turbo compile
          git config --global user.email "wangshouren116@gmail.com"
          git config --global user.name "ci"
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/xiaosen7/npcs.git
          export NPM_TOKEN=${{ secrets.NPM_TOKEN }}
          pnpm lerna publish patch -y

  push:
    needs: check
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2 # we need diff recent two commits

      - uses: ./.github/actions/setup

      - name: Login Registry
        run: |
          echo ${{ secrets.PAT }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Build and Push Image
        run: |
          bash multi-app-docker-build-push.sh

  deploy:
    needs: push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List files for debugging
        run: |
          ls -l

      - name: Upload to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: ./deploy
          target: ${{ secrets.VPS_WORK_DIR }}

      - name: Execute deployment via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          envs: REPO_NAME
          script: |
            cd ${{ secrets.VPS_WORK_DIR }}/deploy
            bash start.sh
